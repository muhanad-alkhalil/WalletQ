// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletQ.DataAccess;

namespace WalletQ.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210330063454_adding-payment-model-and-alter-transaction")]
    partial class addingpaymentmodelandaltertransaction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WalletQ.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("creatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("paymentState")
                        .HasColumnType("int");

                    b.Property<Guid?>("transactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("validationTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("creatorId");

                    b.HasIndex("transactionId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WalletQ.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReciverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReciverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WalletQ.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("walletId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("walletId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WalletQ.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Balance")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("WalletQ.Models.Payment", b =>
                {
                    b.HasOne("WalletQ.Models.User", "creator")
                        .WithMany()
                        .HasForeignKey("creatorId");

                    b.HasOne("WalletQ.Models.Transaction", "transaction")
                        .WithMany()
                        .HasForeignKey("transactionId");

                    b.Navigation("creator");

                    b.Navigation("transaction");
                });

            modelBuilder.Entity("WalletQ.Models.Transaction", b =>
                {
                    b.HasOne("WalletQ.Models.User", "Reciver")
                        .WithMany()
                        .HasForeignKey("ReciverId");

                    b.HasOne("WalletQ.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Reciver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WalletQ.Models.User", b =>
                {
                    b.HasOne("WalletQ.Models.Wallet", "wallet")
                        .WithMany()
                        .HasForeignKey("walletId");

                    b.Navigation("wallet");
                });
#pragma warning restore 612, 618
        }
    }
}
